function rmesh(a)
if not (workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('Mesh') or workspace[game.Players.LocalPlayer.Name][a].Handle:FindFirstChild('SpecialMesh')) then return end
old=game.Players.LocalPlayer.Character
game.Players.LocalPlayer.Character=workspace[game.Players.LocalPlayer.Name]
for i,v in next, workspace[game.Players.LocalPlayer.Name]:FindFirstChild(a).Handle:GetDescendants() do
if v:IsA('Mesh') or v:IsA('SpecialMesh') then
v:Remove()
end
end
for i = 1 , 2 do
game.Players.LocalPlayer.Character=old
end
end

HumanDied = false for i,v in next, game:GetService("Players").LocalPlayer.Character:GetDescendants() do if v:IsA("BasePart") and v.Name ~= 'Torso' and v.Name ~= 'Head' then  _G.netless=game:GetService("RunService").Heartbeat:connect(function() v.AssemblyLinearVelocity = Vector3.new(-30,0,0) sethiddenproperty(game.Players.LocalPlayer,"MaximumSimulationRadius",math.huge) sethiddenproperty(game.Players.LocalPlayer,"SimulationRadius",999999999) end) end end  local plr = game.Players.LocalPlayer local char = plr.Character local srv = game:GetService('RunService') local ct = {}  char.Archivable = true local reanim = char:Clone() reanim.Name = 'Nexo '..plr.Name..'' fl=Instance.new('Folder',char) fl.Name ='Nexo' reanim.Animate.Disabled=true char.HumanoidRootPart:Destroy() char.Humanoid:ChangeState(16)  for i,v in next, char.Humanoid:GetPlayingAnimationTracks() do v:Stop() end char.Animate:Remove()  function create(part, parent, p, r) Instance.new("Attachment",part) Instance.new("AlignPosition",part) Instance.new("AlignOrientation",part) Instance.new("Attachment",parent) part.Attachment.Name = part.Name parent.Attachment.Name = part.Name part.AlignPosition.Attachment0 = part[part.Name] part.AlignOrientation.Attachment0 = part[part.Name] part.AlignPosition.Attachment1 = parent[part.Name] part.AlignOrientation.Attachment1 = parent[part.Name] parent[part.Name].Position = p or Vector3.new() part[part.Name].Orientation = r or Vector3.new() part.AlignPosition.MaxForce = 999999999 part.AlignPosition.MaxVelocity = math.huge part.AlignPosition.ReactionForceEnabled = false part.AlignPosition.Responsiveness = math.huge part.AlignOrientation.Responsiveness = math.huge part.AlignPosition.RigidityEnabled = false part.AlignOrientation.MaxTorque = 999999999 end  for i,v in next, char:GetDescendants() do if v:IsA('Accessory') then v.Handle:BreakJoints() create(v.Handle,reanim[v.Name].Handle) end end  char.Torso['Left Shoulder']:Destroy() char.Torso['Right Shoulder']:Destroy() char.Torso['Left Hip']:Destroy() char.Torso['Right Hip']:Destroy()  create(char['Torso'],reanim['Torso']) create(char['Left Arm'],reanim['Left Arm']) create(char['Right Arm'],reanim['Right Arm']) create(char['Left Leg'],reanim['Left Leg']) create(char['Right Leg'],reanim['Right Leg'])  for i,v in next, reanim:GetDescendants() do if v:IsA('BasePart') or v:IsA('Decal') then v.Transparency = 1 end end  reanim.Parent = fl  table.insert(ct,srv.Heartbeat:Connect(function() char.Torso.CFrame=reanim.Torso.CFrame char.Torso.Velocity=Vector3.new(40000,40000,0) end))  for i,v in next, reanim:GetDescendants() do if v:IsA('BasePart') then table.insert(ct,srv.RenderStepped:Connect(function() v.CanCollide = false end)) end end  for i,v in next, char:GetDescendants() do if v:IsA('BasePart') then table.insert(ct,srv.RenderStepped:Connect(function() v.CanCollide = false end)) end end  for i,v in next, reanim:GetDescendants() do if v:IsA('BasePart') then table.insert(ct,srv.Stepped:Connect(function() v.CanCollide = false end)) end end  for i,v in next, char:GetDescendants() do if v:IsA('BasePart') then table.insert(ct,srv.Stepped:Connect(function() v.CanCollide = false end)) end end  table.insert(ct,reanim.Humanoid.Died:Connect(function() plr.Character = char char:BreakJoints() reanim:Destroy() game.Players:Chat('-gr') _G.netless:Disconnect() HumanDied = true for _,v in pairs(ct) do v:Disconnect() end end))  plr.Character = reanim workspace.CurrentCamera.CameraSubject = reanim.Humanoid

IT = Instance.new
CF = CFrame.new
VT = Vector3.new
RAD = math.rad
C3 = Color3.new
UD2 = UDim2.new
BRICKC = BrickColor.new
ANGLES = CFrame.Angles
EULER = CFrame.fromEulerAnglesXYZ
COS = math.cos
ACOS = math.acos
SIN = math.sin
ASIN = math.asin
ABS = math.abs
MRANDOM = math.random
FLOOR = math.floor

speed = 1
sine = 1
srv = game:GetService('RunService')

reanim = game.Players.LocalPlayer.Character

function hat(h,p,c1,c0,m)
reanim[h].Handle.AccessoryWeld.Part1=reanim[p]
reanim[h].Handle.AccessoryWeld.C1=c1 or CFrame.new()
reanim[h].Handle.AccessoryWeld.C0=reanim[h].Handle.AccessoryWeld.C0:Lerp(c0 or CFrame.new(),1)
if m == true then
rmesh(h)
end
end

m=game.Players.LocalPlayer:GetMouse()
RJ = reanim.HumanoidRootPart.RootJoint
RS = reanim.Torso['Right Shoulder']
LS = reanim.Torso['Left Shoulder']
RH = reanim.Torso['Right Hip']
LH = reanim.Torso['Left Hip']
Root = reanim.HumanoidRootPart
NECK = reanim.Torso.Neck
NECK.C0 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
NECK.C1 = CF(0,-0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C1 = CF(0,-1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RJ.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C1 = CF(0,0.5,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C1 = CF(0,1,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LH.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
RS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))
LS.C0 = CF(0,0,0)*ANGLES(RAD(0),RAD(0),RAD(0))

Mode='1'
reanim.Humanoid.WalkSpeed = 5

local ass = game.Players.LocalPlayer:GetMouse()
ASSSEX = false
PUSSYSEX = false

ass.KeyDown:Connect(function(k)
if reanim.Humanoid.WalkSpeed == 5 then
ASSSEX=true
reanim.Humanoid.WalkSpeed = 5
wait(.2)
PUSSYSEX=true
reanim.Humanoid.WalkSpeed = 36
elseif k == "p" then
Mode='1'
end
end)

if Mode=='Perry' and PUSSYSEX== true then
Mode='1'
end

ass.KeyDown:connect(function(keydown)
  if Root.Velocity.Magnitude < 2 and keydown == 'f' then
    Mode='Perry'
  end
end)

ass.KeyUp:connect(function(keyup)
  if keyup == 'f' then
    Mode='1'
  end
end)

ass.Button1Down:Connect(function()
if Root.Velocity.Magnitude < 2 then
Mode='Perry'
wait(.2)
Mode='Attack1'
wait(.05)
Mode='Attack2'
wait(.1)
Mode='Attack3'
wait(.15)
Mode='Attack4'
wait(.05)
Mode='Attack5'
wait(.1)
Mode='Attack6'
wait(.15)
Mode='1'
else
Mode='xAttack1'
wait(.05)
Mode='xAttack2'
wait(.1)
Mode='xAttack3'
wait(.15)
Mode='xAttack4'
wait(.05)
Mode='xAttack5'
wait(.1)
Mode='xAttack6'
wait(.15)
Mode='1'
end
end)

coroutine.wrap(function()
while true do -- anim changer
if HumanDied then break end
sine = sine + speed
local rlegray = Ray.new(reanim["Right Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local rlegpart, rlegendPoint = workspace:FindPartOnRay(rlegray, char)
local llegray = Ray.new(reanim["Left Leg"].Position + Vector3.new(0, 0.5, 0), Vector3.new(0, -2, 0))
local llegpart, llegendPoint = workspace:FindPartOnRay(llegray, char)
local rightvector = (Root.Velocity * Root.CFrame.rightVector).X + (Root.Velocity * Root.CFrame.rightVector).Z
local lookvector = (Root.Velocity * Root.CFrame.lookVector).X + (Root.Velocity * Root.CFrame.lookVector).Z
if lookvector > reanim.Humanoid.WalkSpeed then
lookvector = reanim.Humanoid.WalkSpeed
end
if lookvector < -reanim.Humanoid.WalkSpeed then
lookvector = -reanim.Humanoid.WalkSpeed
end
if rightvector > reanim.Humanoid.WalkSpeed then
rightvector = reanim.Humanoid.WalkSpeed
end
if rightvector < -reanim.Humanoid.WalkSpeed then
rightvector = -reanim.Humanoid.WalkSpeed
end
local lookvel = lookvector / reanim.Humanoid.WalkSpeed
local rightvel = rightvector / reanim.Humanoid.WalkSpeed
if Mode=='1' then
if reanim.Humanoid.Jump then -- jump

elseif Root.Velocity.y < -1 and reanim.Humanoid.Jump then -- fall

elseif Root.Velocity.Magnitude < 2 then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1.76+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-24.98+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(83.53+0*math["cos"](sine/10)),math.rad(28.51+0*math["cos"](sine/10)),math.rad(-44.85+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(91.17+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(54.49+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-0.9+0*math["cos"](sine/10),-0.04+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-24.98+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-0.04+0*math["cos"](sine/10),-0.9+0*math["cos"](sine/10))*CFrame.Angles(math.rad(23.92+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-3+0*math["cos"](sine/10))),.2)

reanim.Humanoid.WalkSpeed = 5
elseif Root.Velocity.Magnitude < 20 and ASSSEX==true then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-24.98+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(91.17+0*math["cos"](sine/10)),math.rad(28.51+0*math["cos"](sine/10)),math.rad(-44.85+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(366.28+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-12.76+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-0.9+0*math["cos"](sine/10),-0.04+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(30.04+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Root.Velocity.Magnitude > 20 and PUSSYSEX==true then -- run
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-24.98+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(83.53+0*math["cos"](sine/10)),math.rad(28.51+0*math["cos"](sine/10)),math.rad(-44.85+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(274.58+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-12.76+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-0.9+0*math["cos"](sine/10),-0.04+0*math["cos"](sine/10))*CFrame.Angles(math.rad(17.81+60*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(17.81+-60*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-3+0*math["cos"](sine/10))),.2)

end


elseif Mode=='Perry' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-2.19+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-24.98+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["cos"](sine/10),0.5+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(91.17+0*math["cos"](sine/10)),math.rad(42.26+0*math["cos"](sine/10)),math.rad(-18.87+0*math["cos"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.76+0*math["cos"](sine/10),1.25+0*math["cos"](sine/10),-0.47+0*math["cos"](sine/10))*CFrame.Angles(math.rad(513+0*math["cos"](sine/10)),math.rad(-18.87+0*math["cos"](sine/10)),math.rad(48.38+0*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-0.9+0*math["cos"](sine/10),-0.04+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-31.1+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),0.39+0*math["cos"](sine/10),-0.68+0*math["cos"](sine/10))*CFrame.Angles(math.rad(23.92+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(-3+0*math["cos"](sine/10))),.2)




--------------ATTACKS---------------

elseif Mode=='Attack1' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.25+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),-0.9+0*math["sin"](sine/10))*CFrame.Angles(math.rad(745.31+-2*math["sin"](sine/10)),math.rad(140.08+0*math["sin"](sine/10)),math.rad(48.38+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-6.64+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='Attack2' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.25+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),-0.9+0*math["sin"](sine/10))*CFrame.Angles(math.rad(745.31+-2*math["sin"](sine/10)),math.rad(74.36+0*math["sin"](sine/10)),math.rad(48.38+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-6.64+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='Attack3' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(140.08+-2*math["sin"](sine/10)),math.rad(-12.76+0*math["sin"](sine/10)),math.rad(11.7+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-6.64+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='Attack4' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(78.95+-2*math["sin"](sine/10)),math.rad(48.38+0*math["sin"](sine/10)),math.rad(-37.21+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-6.64+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='Attack5' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(-37.21+-2*math["sin"](sine/10)),math.rad(42.26+0*math["sin"](sine/10)),math.rad(42.26+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-6.64+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='Attack6' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(66.72+-2*math["sin"](sine/10)),math.rad(-24.98+0*math["sin"](sine/10)),math.rad(42.26+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(-6.64+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)







-------------------------






elseif Mode=='xAttack1' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.25+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),-0.9+0*math["sin"](sine/10))*CFrame.Angles(math.rad(745.31+-2*math["sin"](sine/10)),math.rad(140.08+0*math["sin"](sine/10)),math.rad(48.38+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='xAttack2' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.25+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),-0.9+0*math["sin"](sine/10))*CFrame.Angles(math.rad(745.31+-2*math["sin"](sine/10)),math.rad(74.36+0*math["sin"](sine/10)),math.rad(48.38+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='xAttack3' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(140.08+-2*math["sin"](sine/10)),math.rad(-12.76+0*math["sin"](sine/10)),math.rad(11.7+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='xAttack4' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(78.95+-2*math["sin"](sine/10)),math.rad(48.38+0*math["sin"](sine/10)),math.rad(-37.21+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='xAttack5' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(-37.21+-2*math["sin"](sine/10)),math.rad(42.26+0*math["sin"](sine/10)),math.rad(42.26+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)

elseif Mode=='xAttack6' then
NECK.C0=NECK.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),1+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/10))),.2) 
RJ.C0=RJ.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),-1+0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(0+0*math["cos"](sine/10))),.2) 
RS.C0=RS.C0:Lerp(CFrame.new(1.5+0*math["sin"](sine/10),0.5+0*math["sin"](sine/10),0+0*math["sin"](sine/10))*CFrame.Angles(math.rad(66.72+-2*math["sin"](sine/10)),math.rad(-24.98+0*math["sin"](sine/10)),math.rad(42.26+0*math["sin"](sine/10))),.2) 
LS.C0=LS.C0:Lerp(CFrame.new(-1.5+0*math["cos"](sine/10),0.5+0*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+0*math["cos"](sine/10)),math.rad(0+-2*math["cos"](sine/28)),math.rad(-8.17+-2*math["cos"](sine/10))),.2) 
RH.C0=RH.C0:Lerp(CFrame.new(0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),-0.1+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(3+0*math["cos"](sine/10))),.2) 
LH.C0=LH.C0:Lerp(CFrame.new(-0.5+0*math["cos"](sine/10),-1+-0.05*math["sin"](sine/28),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(0+-55*math["cos"](sine/10)),math.rad(0+0*math["cos"](sine/28)),math.rad(-3+0*math["cos"](sine/10))),.2)


end
srv.RenderStepped:Wait()
end
end)()

game.StarterGui:SetCore("SendNotification",  {
 Title = "Script is made by Script Verse";
 Text = "discord.gg/JPTv7JkG8g";
 Icon = "";
 Duration = 5;
})

hat('Back_AccAccessory','Right Arm',CFrame.new(0,0,0),CFrame.new(0+0*math["cos"](sine/10),2.11+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(85.06+0*math["cos"](sine/10)),math.rad(152.31+0*math["cos"](sine/10)),math.rad(-80+0*math["cos"](sine/10))),false)
reanim['Back_AccAccessory'].Handle.AccessoryWeld.C0=reanim['Back_AccAccessory'].Handle.AccessoryWeld.C0:Lerp(CFrame.new(0+0*math["cos"](sine/10),2.11+0*math["cos"](sine/10),0+0*math["cos"](sine/10))*CFrame.Angles(math.rad(85.06+0*math["cos"](sine/10)),math.rad(152.31+0*math["cos"](sine/10)),math.rad(-80+0*math["cos"](sine/10)),.2)
)
